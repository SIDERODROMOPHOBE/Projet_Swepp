{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "ChangeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cible",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "CreateMoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260058054732bdc20f9377221032bcbfbcf9ea5bb8b4a2121656001600160a01b0319918216811790925560068054909116909117905534801561004657600080fd5b506040518060400160405280600a81526020016929ba30b13632a1b7b0b760b11b8152506040518060400160405280600381526020016253544360e81b815250816003908051906020019061009c9291906100b8565b5080516100b09060049060208401906100b8565b50505061018b565b8280546100c490610151565b90600052602060002090601f0160209004810192826100e6576000855561012c565b82601f106100ff57805160ff191683800117855561012c565b8280016001018555821561012c579182015b8281111561012c578251825591602001919060010190610111565b5061013892915061013c565b5090565b5b80821115610138576000815560010161013d565b600181811c9082168061016557607f821691505b60208210810361018557634e487b7160e01b600052602260045260246000fd5b50919050565b6107fa8061019a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063644e9c1811610071578063644e9c181461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063b4c7f2601461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610638565b60405180910390f35b6100df6100da3660046106a9565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106d3565b610272565b604051601281526020016100c3565b6101366101313660046106a9565b610296565b005b6100f361014636600461070f565b6001600160a01b031660009081526020819052604090205490565b6100b66102a4565b6100df6101773660046106a9565b6102b3565b61013661018a36600461070f565b6102c1565b6100f361019d366004610731565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d790610764565b80601f016020809104026020016040519081016040528092919081815260200182805461020390610764565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b60003361026881858561030f565b5060019392505050565b600033610280858285610321565b61028b8585856103a4565b506001949350505050565b6102a08282610403565b5050565b6060600480546101d790610764565b6000336102688185856103a4565b6005546001600160a01b03163314806102e457506006546001600160a01b031633145b6102ed57600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61031c8383836001610439565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461039e578181101561038f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61039e84848484036000610439565b50505050565b6001600160a01b0383166103ce57604051634b637e8f60e11b815260006004820152602401610386565b6001600160a01b0382166103f85760405163ec442f0560e01b815260006004820152602401610386565b61031c83838361050e565b6001600160a01b03821661042d5760405163ec442f0560e01b815260006004820152602401610386565b6102a06000838361050e565b6001600160a01b0384166104635760405163e602df0560e01b815260006004820152602401610386565b6001600160a01b03831661048d57604051634a1406b160e11b815260006004820152602401610386565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561039e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161050091815260200190565b60405180910390a350505050565b6001600160a01b03831661053957806002600082825461052e919061079e565b909155506105ab9050565b6001600160a01b0383166000908152602081905260409020548181101561058c5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610386565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105c7576002805482900390556105e6565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161062b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561066557858101830151858201604001528201610649565b81811115610677576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106a457600080fd5b919050565b600080604083850312156106bc57600080fd5b6106c58361068d565b946020939093013593505050565b6000806000606084860312156106e857600080fd5b6106f18461068d565b92506106ff6020850161068d565b9150604084013590509250925092565b60006020828403121561072157600080fd5b61072a8261068d565b9392505050565b6000806040838503121561074457600080fd5b61074d8361068d565b915061075b6020840161068d565b90509250929050565b600181811c9082168061077857607f821691505b60208210810361079857634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156107bf57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220122f8de7003b188e006009b65532495348bc80d846d07a9fae443f9cf88a585f64736f6c634300080d0033",
    "sourceMap": "139:582:22:-:0;;;239:60;;;257:42;-1:-1:-1;;;;;;239:60:22;;;;;;;;305:61;;;;;;;;;;;373:60;;;;;;;;;;1874:113:15;;;;;;;;;;;;;-1:-1:-1;;;1874:113:15;;;;;;;;;;;;;;;;-1:-1:-1;;;1874:113:15;;;1948:5;1940;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1963:17:15;;;;:7;;:17;;;;;:::i;:::-;;1874:113;;139:582:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;139:582:22;;;-1:-1:-1;139:582:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:23;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;139:582:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063644e9c1811610071578063644e9c181461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063b4c7f2601461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610638565b60405180910390f35b6100df6100da3660046106a9565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106d3565b610272565b604051601281526020016100c3565b6101366101313660046106a9565b610296565b005b6100f361014636600461070f565b6001600160a01b031660009081526020819052604090205490565b6100b66102a4565b6100df6101773660046106a9565b6102b3565b61013661018a36600461070f565b6102c1565b6100f361019d366004610731565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d790610764565b80601f016020809104026020016040519081016040528092919081815260200182805461020390610764565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b60003361026881858561030f565b5060019392505050565b600033610280858285610321565b61028b8585856103a4565b506001949350505050565b6102a08282610403565b5050565b6060600480546101d790610764565b6000336102688185856103a4565b6005546001600160a01b03163314806102e457506006546001600160a01b031633145b6102ed57600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61031c8383836001610439565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461039e578181101561038f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61039e84848484036000610439565b50505050565b6001600160a01b0383166103ce57604051634b637e8f60e11b815260006004820152602401610386565b6001600160a01b0382166103f85760405163ec442f0560e01b815260006004820152602401610386565b61031c83838361050e565b6001600160a01b03821661042d5760405163ec442f0560e01b815260006004820152602401610386565b6102a06000838361050e565b6001600160a01b0384166104635760405163e602df0560e01b815260006004820152602401610386565b6001600160a01b03831661048d57604051634a1406b160e11b815260006004820152602401610386565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561039e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161050091815260200190565b60405180910390a350505050565b6001600160a01b03831661053957806002600082825461052e919061079e565b909155506105ab9050565b6001600160a01b0383166000908152602081905260409020548181101561058c5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610386565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105c7576002805482900390556105e6565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161062b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561066557858101830151858201604001528201610649565b81811115610677576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106a457600080fd5b919050565b600080604083850312156106bc57600080fd5b6106c58361068d565b946020939093013593505050565b6000806000606084860312156106e857600080fd5b6106f18461068d565b92506106ff6020850161068d565b9150604084013590509250925092565b60006020828403121561072157600080fd5b61072a8261068d565b9392505050565b6000806040838503121561074457600080fd5b61074d8361068d565b915061075b6020840161068d565b90509250929050565b600181811c9082168061077857607f821691505b60208210810361079857634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156107bf57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220122f8de7003b188e006009b65532495348bc80d846d07a9fae443f9cf88a585f64736f6c634300080d0033",
    "sourceMap": "139:582:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:89:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4271:186;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:23;;1211:22;1193:41;;1181:2;1166:18;4271:186:15;1053:187:23;3122:97:15;3200:12;;3122:97;;;1391:25:23;;;1379:2;1364:18;3122:97:15;1245:177:23;5017:244:15;;;;;;:::i;:::-;;:::i;2980:82::-;;;3053:2;1902:36:23;;1890:2;1875:18;2980:82:15;1760:184:23;622:97:22;;;;;;:::i;:::-;;:::i;:::-;;3277:116:15;;;;;;:::i;:::-;-1:-1:-1;;;;;3368:18:15;3342:7;3368:18;;;;;;;;;;;;3277:116;2254:93;;;:::i;3588:178::-;;;;;;:::i;:::-;;:::i;539:78:22:-;;;;;;:::i;:::-;;:::i;3824:140:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3930:18:15;;;3904:7;3930:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3824:140;2052:89;2097:13;2129:5;2122:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:89;:::o;4271:186::-;4344:4;735:10:18;4398:31:15;735:10:18;4414:7:15;4423:5;4398:8;:31::i;:::-;-1:-1:-1;4446:4:15;;4271:186;-1:-1:-1;;;4271:186:15:o;5017:244::-;5104:4;735:10:18;5160:37:15;5176:4;735:10:18;5191:5:15;5160:15;:37::i;:::-;5207:26;5217:4;5223:2;5227:5;5207:9;:26::i;:::-;-1:-1:-1;5250:4:15;;5017:244;-1:-1:-1;;;;5017:244:15:o;622:97:22:-;691:22;697:6;705:7;691:5;:22::i;:::-;622:97;;:::o;2254:93:15:-;2301:13;2333:7;2326:14;;;;;:::i;3588:178::-;3657:4;735:10:18;3711:27:15;735:10:18;3728:2:15;3732:5;3711:9;:27::i;539:78:22:-;486:7;;-1:-1:-1;;;;;486:7:22;472:10;:21;;:46;;-1:-1:-1;509:9:22;;-1:-1:-1;;;;;509:9:22;497:10;:21;472:46;464:55;;;;;;597:9:::1;:14:::0;;-1:-1:-1;;;;;;597:14:22::1;-1:-1:-1::0;;;;;597:14:22;;;::::1;::::0;;;::::1;::::0;;539:78::o;8967:128:15:-;9051:37;9060:5;9067:7;9076:5;9083:4;9051:8;:37::i;:::-;8967:128;;;:::o;10641:477::-;-1:-1:-1;;;;;3930:18:15;;;10740:24;3930:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10806:37:15;;10802:310;;10882:5;10863:16;:24;10859:130;;;10914:60;;-1:-1:-1;;;10914:60:15;;-1:-1:-1;;;;;3010:32:23;;10914:60:15;;;2992:51:23;3059:18;;;3052:34;;;3102:18;;;3095:34;;;2965:18;;10914:60:15;;;;;;;;10859:130;11030:57;11039:5;11046:7;11074:5;11055:16;:24;11081:5;11030:8;:57::i;:::-;10730:388;10641:477;;;:::o;5634:300::-;-1:-1:-1;;;;;5717:18:15;;5713:86;;5758:30;;-1:-1:-1;;;5758:30:15;;5785:1;5758:30;;;3286:51:23;3259:18;;5758:30:15;3140:203:23;5713:86:15;-1:-1:-1;;;;;5812:16:15;;5808:86;;5851:32;;-1:-1:-1;;;5851:32:15;;5880:1;5851:32;;;3286:51:23;3259:18;;5851:32:15;3140:203:23;5808:86:15;5903:24;5911:4;5917:2;5921:5;5903:7;:24::i;7699:208::-;-1:-1:-1;;;;;7769:21:15;;7765:91;;7813:32;;-1:-1:-1;;;7813:32:15;;7842:1;7813:32;;;3286:51:23;3259:18;;7813:32:15;3140:203:23;7765:91:15;7865:35;7881:1;7885:7;7894:5;7865:7;:35::i;9927:432::-;-1:-1:-1;;;;;10039:19:15;;10035:89;;10081:32;;-1:-1:-1;;;10081:32:15;;10110:1;10081:32;;;3286:51:23;3259:18;;10081:32:15;3140:203:23;10035:89:15;-1:-1:-1;;;;;10137:21:15;;10133:90;;10181:31;;-1:-1:-1;;;10181:31:15;;10209:1;10181:31;;;3286:51:23;3259:18;;10181:31:15;3140:203:23;10133:90:15;-1:-1:-1;;;;;10232:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10277:76;;;;10327:7;-1:-1:-1;;;;;10311:31:15;10320:5;-1:-1:-1;;;;;10311:31:15;;10336:5;10311:31;;;;1391:25:23;;1379:2;1364:18;;1245:177;10311:31:15;;;;;;;;9927:432;;;;:::o;6249:1107::-;-1:-1:-1;;;;;6338:18:15;;6334:540;;6490:5;6474:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6334:540:15;;-1:-1:-1;6334:540:15;;-1:-1:-1;;;;;6548:15:15;;6526:19;6548:15;;;;;;;;;;;6581:19;;;6577:115;;;6627:50;;-1:-1:-1;;;6627:50:15;;-1:-1:-1;;;;;3010:32:23;;6627:50:15;;;2992:51:23;3059:18;;;3052:34;;;3102:18;;;3095:34;;;2965:18;;6627:50:15;2790:345:23;6577:115:15;-1:-1:-1;;;;;6812:15:15;;:9;:15;;;;;;;;;;6830:19;;;;6812:37;;6334:540;-1:-1:-1;;;;;6888:16:15;;6884:425;;7051:12;:21;;;;;;;6884:425;;;-1:-1:-1;;;;;7262:13:15;;:9;:13;;;;;;;;;;:22;;;;;;6884:425;7339:2;-1:-1:-1;;;;;7324:25:15;7333:4;-1:-1:-1;;;;;7324:25:15;;7343:5;7324:25;;;;1391::23;;1379:2;1364:18;;1245:177;7324:25:15;;;;;;;;6249:1107;;;:::o;14:597:23:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:23;574:15;-1:-1:-1;;570:29:23;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:23:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:23;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:23:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:23:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3348:225::-;3388:3;3419:1;3415:6;3412:1;3409:13;3406:136;;;3464:10;3459:3;3455:20;3452:1;3445:31;3499:4;3496:1;3489:15;3527:4;3524:1;3517:15;3406:136;-1:-1:-1;3558:9:23;;3348:225::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ChangeUser(address)": "b4c7f260",
    "CreateMoney(address,uint256)": "644e9c18",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"ChangeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cible\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"CreateMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Token2.sol\":\"Token2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x6505c8b6128bdcc5ddb695f07e7c02e6e4ee32338f19e1ff4706a1eaaa62681c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d922236f4c3662baf4b9cd46cf5b9f5ea7a530106c3005188914e9da54d5779\",\"dweb:/ipfs/QmTbjWBE3gHjQKKf3LxBx5T9QRng3YTxzdumedvTFt6iwB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd09b23c4a434f653f7a2df802d686901a5e252720280bb92d32be8c39e9ff87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d64ea4aaa42849746fc71f3a597bd95d5ca20d72aaaa11023f9f292bfb658475\",\"dweb:/ipfs/Qmckor2591i6fEkj8CGrZwZyhJQMABJ261UGv5i3qGyLpr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x434a3b5a516014f65abbf6bc1a37db7327858658f8800cec2f152db994aa5548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36d1e3825c77eea57500ab544e577219c5c1bbd775ad406e753315a1e212257e\",\"dweb:/ipfs/QmVrwGNQYMXWwTnNZxP2ci5E72sT3K9YpNk7CNf441QiTd\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x077dd39d8a54422ec4152c66e20ced0daaccf65e84e4fa5068476b9e7ef457fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9643a49fcd76b949f364f2ad122c2048c4b42cd2943276401ef42b56d55e0465\",\"dweb:/ipfs/QmZopJtLT4aHLfoj4eaErqtgDdR3RQR4sd44deQnnDNwNQ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xb0170f6f83a594b01b6a7df85944668529def70ed6df0b4baf463521feac7605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3189182c2f4184ebc50f03a0e47766e725087e9827d33306ed2c42c24e8cca0\",\"dweb:/ipfs/QmTdVFyfm2kCPPiQFJyMn9CwNeuLc8voHDvsd1E4JcK3RP\"]},\"src/Token2.sol\":{\"keccak256\":\"0xed0f11e0cc24e985ab7f9efd41cd1a56772272817435370dda9e966ec7de12b8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7c23048975c7492075e7eae86dddc1345f41c183f066429a316a7ce8514d0ba0\",\"dweb:/ipfs/QmSMfJhwoDjtncrDhLXWBXA3giuyiWg5632pnV1vcamhUt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_add",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ChangeUser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_cible",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "CreateMoney"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Token2.sol": "Token2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x6505c8b6128bdcc5ddb695f07e7c02e6e4ee32338f19e1ff4706a1eaaa62681c",
        "urls": [
          "bzz-raw://6d922236f4c3662baf4b9cd46cf5b9f5ea7a530106c3005188914e9da54d5779",
          "dweb:/ipfs/QmTbjWBE3gHjQKKf3LxBx5T9QRng3YTxzdumedvTFt6iwB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd09b23c4a434f653f7a2df802d686901a5e252720280bb92d32be8c39e9ff87c",
        "urls": [
          "bzz-raw://d64ea4aaa42849746fc71f3a597bd95d5ca20d72aaaa11023f9f292bfb658475",
          "dweb:/ipfs/Qmckor2591i6fEkj8CGrZwZyhJQMABJ261UGv5i3qGyLpr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x434a3b5a516014f65abbf6bc1a37db7327858658f8800cec2f152db994aa5548",
        "urls": [
          "bzz-raw://36d1e3825c77eea57500ab544e577219c5c1bbd775ad406e753315a1e212257e",
          "dweb:/ipfs/QmVrwGNQYMXWwTnNZxP2ci5E72sT3K9YpNk7CNf441QiTd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x077dd39d8a54422ec4152c66e20ced0daaccf65e84e4fa5068476b9e7ef457fc",
        "urls": [
          "bzz-raw://9643a49fcd76b949f364f2ad122c2048c4b42cd2943276401ef42b56d55e0465",
          "dweb:/ipfs/QmZopJtLT4aHLfoj4eaErqtgDdR3RQR4sd44deQnnDNwNQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xb0170f6f83a594b01b6a7df85944668529def70ed6df0b4baf463521feac7605",
        "urls": [
          "bzz-raw://a3189182c2f4184ebc50f03a0e47766e725087e9827d33306ed2c42c24e8cca0",
          "dweb:/ipfs/QmTdVFyfm2kCPPiQFJyMn9CwNeuLc8voHDvsd1E4JcK3RP"
        ],
        "license": "MIT"
      },
      "src/Token2.sol": {
        "keccak256": "0xed0f11e0cc24e985ab7f9efd41cd1a56772272817435370dda9e966ec7de12b8",
        "urls": [
          "bzz-raw://7c23048975c7492075e7eae86dddc1345f41c183f066429a316a7ce8514d0ba0",
          "dweb:/ipfs/QmSMfJhwoDjtncrDhLXWBXA3giuyiWg5632pnV1vcamhUt"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Token2.sol",
    "id": 40445,
    "exportedSymbols": {
      "Context": [
        40079
      ],
      "ERC20": [
        39953
      ],
      "IERC20": [
        40031
      ],
      "IERC20Errors": [
        39343
      ],
      "IERC20Metadata": [
        40057
      ],
      "Token2": [
        40444
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:683:22",
    "nodes": [
      {
        "id": 40385,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 40386,
        "nodeType": "ImportDirective",
        "src": "66:71:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40445,
        "sourceUnit": 39954,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40444,
        "nodeType": "ContractDefinition",
        "src": "139:582:22",
        "nodes": [
          {
            "id": 40391,
            "nodeType": "VariableDeclaration",
            "src": "239:60:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "GodUser",
            "nameLocation": "247:7:22",
            "scope": 40444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "239:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832626443323046393337373232313033326263424642636639456135624238423441323132313635",
              "id": 40390,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "257:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2bdC20F9377221032bcBFBcf9Ea5bB8B4A212165"
            },
            "visibility": "internal"
          },
          {
            "id": 40394,
            "nodeType": "VariableDeclaration",
            "src": "305:61:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OtherUser",
            "nameLocation": "313:9:22",
            "scope": 40444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40392,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "305:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832626443323046393337373232313033326263424642636639456135624238423441323132313635",
              "id": 40393,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "324:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2bdC20F9377221032bcBFBcf9Ea5bB8B4A212165"
            },
            "visibility": "internal"
          },
          {
            "id": 40402,
            "nodeType": "FunctionDefinition",
            "src": "373:60:22",
            "nodes": [],
            "body": {
              "id": 40401,
              "nodeType": "Block",
              "src": "417:16:22",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "537461626c65436f616e",
                    "id": 40397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "393:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_104bab3d5f336fa8ded3dfdff9c7e08346c535bd470f6976e561cebc81d828f1",
                      "typeString": "literal_string \"StableCoan\""
                    },
                    "value": "StableCoan"
                  },
                  {
                    "hexValue": "535443",
                    "id": 40398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "406:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3f42082bbc5d551c10665ffb41d260539d3901690b4a2ef6b8d6d113f8a07414",
                      "typeString": "literal_string \"STC\""
                    },
                    "value": "STC"
                  }
                ],
                "id": 40399,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40396,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39953,
                  "src": "387:5:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "387:25:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 40395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:22"
            },
            "returnParameters": {
              "id": 40400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:22"
            },
            "scope": 40444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40418,
            "nodeType": "ModifierDefinition",
            "src": "439:95:22",
            "nodes": [],
            "body": {
              "id": 40417,
              "nodeType": "Block",
              "src": "456:78:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 40408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 40405,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "472:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "472:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 40407,
                            "name": "GodUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40391,
                            "src": "486:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "472:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 40412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 40409,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "497:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "497:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 40411,
                            "name": "OtherUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40394,
                            "src": "509:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "497:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "472:46:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 40404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "464:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 40414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40415,
                  "nodeType": "ExpressionStatement",
                  "src": "464:55:22"
                },
                {
                  "id": 40416,
                  "nodeType": "PlaceholderStatement",
                  "src": "527:1:22"
                }
              ]
            },
            "name": "onlyGod",
            "nameLocation": "448:7:22",
            "parameters": {
              "id": 40403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "456:0:22"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40430,
            "nodeType": "FunctionDefinition",
            "src": "539:78:22",
            "nodes": [],
            "body": {
              "id": 40429,
              "nodeType": "Block",
              "src": "591:26:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40425,
                      "name": "OtherUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40394,
                      "src": "597:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40426,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40420,
                      "src": "607:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "597:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40428,
                  "nodeType": "ExpressionStatement",
                  "src": "597:14:22"
                }
              ]
            },
            "functionSelector": "b4c7f260",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40423,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40422,
                  "name": "onlyGod",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40418,
                  "src": "580:7:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "580:7:22"
              }
            ],
            "name": "ChangeUser",
            "nameLocation": "548:10:22",
            "parameters": {
              "id": 40421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40420,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "567:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 40430,
                  "src": "559:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:14:22"
            },
            "returnParameters": {
              "id": 40424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:22"
            },
            "scope": 40444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40443,
            "nodeType": "FunctionDefinition",
            "src": "622:97:22",
            "nodes": [],
            "body": {
              "id": 40442,
              "nodeType": "Block",
              "src": "685:34:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40438,
                        "name": "_cible",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40432,
                        "src": "697:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40439,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40434,
                        "src": "705:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40437,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39793,
                      "src": "691:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 40440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "691:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40441,
                  "nodeType": "ExpressionStatement",
                  "src": "691:22:22"
                }
              ]
            },
            "functionSelector": "644e9c18",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateMoney",
            "nameLocation": "631:11:22",
            "parameters": {
              "id": 40435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40432,
                  "mutability": "mutable",
                  "name": "_cible",
                  "nameLocation": "651:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 40443,
                  "src": "643:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40434,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "666:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 40443,
                  "src": "658:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:32:22"
            },
            "returnParameters": {
              "id": 40436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "685:0:22"
            },
            "scope": 40444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40387,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39953,
              "src": "158:5:22"
            },
            "id": 40388,
            "nodeType": "InheritanceSpecifier",
            "src": "158:5:22"
          }
        ],
        "canonicalName": "Token2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          40444,
          39953,
          39343,
          40057,
          40031,
          40079
        ],
        "name": "Token2",
        "nameLocation": "148:6:22",
        "scope": 40445,
        "usedErrors": [
          39313,
          39318,
          39323,
          39332,
          39337,
          39342
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}