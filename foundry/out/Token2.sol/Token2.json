{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "ChangeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cible",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "CreateMoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260058054732bdc20f9377221032bcbfbcf9ea5bb8b4a2121656001600160a01b0319918216811790925560068054909116909117905534801561004657600080fd5b506040518060400160405280600a81526020016929ba30b13632a1b7b0b760b11b8152506040518060400160405280600381526020016253544360e81b81525081600390816100959190610149565b5060046100a28282610149565b505050610208565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100d457607f821691505b6020821081036100f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561014457600081815260208120601f850160051c810160208610156101215750805b601f850160051c820191505b818110156101405782815560010161012d565b5050505b505050565b81516001600160401b03811115610162576101626100aa565b6101768161017084546100c0565b846100fa565b602080601f8311600181146101ab57600084156101935750858301515b600019600386901b1c1916600185901b178555610140565b600085815260208120601f198616915b828110156101da578886015182559484019460019091019084016101bb565b50858210156101f85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61084c806102176000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063644e9c1811610071578063644e9c181461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063b4c7f2601461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610677565b60405180910390f35b6100df6100da3660046106e1565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461070b565b610274565b604051601281526020016100c3565b6101366101313660046106e1565b610298565b005b6100f3610146366004610747565b6001600160a01b031660009081526020819052604090205490565b6100b66102e3565b6100df6101773660046106e1565b6102f2565b61013661018a366004610747565b610300565b6100f361019d366004610769565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d79061079c565b80601f01602080910402602001604051908101604052809291908181526020018280546102039061079c565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b60003361026881858561034e565b60019150505b92915050565b600033610282858285610360565b61028d8585856103e3565b506001949350505050565b6005546001600160a01b03163314806102bb57506006546001600160a01b031633145b6102c457600080fd5b6102df826102da83670de0b6b3a76400006107ec565b610442565b5050565b6060600480546101d79061079c565b6000336102688185856103e3565b6005546001600160a01b031633148061032357506006546001600160a01b031633145b61032c57600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61035b8383836001610478565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146103dd57818110156103ce57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103dd84848484036000610478565b50505050565b6001600160a01b03831661040d57604051634b637e8f60e11b8152600060048201526024016103c5565b6001600160a01b0382166104375760405163ec442f0560e01b8152600060048201526024016103c5565b61035b83838361054d565b6001600160a01b03821661046c5760405163ec442f0560e01b8152600060048201526024016103c5565b6102df6000838361054d565b6001600160a01b0384166104a25760405163e602df0560e01b8152600060048201526024016103c5565b6001600160a01b0383166104cc57604051634a1406b160e11b8152600060048201526024016103c5565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103dd57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161053f91815260200190565b60405180910390a350505050565b6001600160a01b03831661057857806002600082825461056d9190610803565b909155506105ea9050565b6001600160a01b038316600090815260208190526040902054818110156105cb5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661060657600280548290039055610625565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161066a91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156106a457858101830151858201604001528201610688565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106dc57600080fd5b919050565b600080604083850312156106f457600080fd5b6106fd836106c5565b946020939093013593505050565b60008060006060848603121561072057600080fd5b610729846106c5565b9250610737602085016106c5565b9150604084013590509250925092565b60006020828403121561075957600080fd5b610762826106c5565b9392505050565b6000806040838503121561077c57600080fd5b610785836106c5565b9150610793602084016106c5565b90509250929050565b600181811c908216806107b057607f821691505b6020821081036107d057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761026e5761026e6107d6565b8082018082111561026e5761026e6107d656fea26469706673582212200f5a8bd86a68137ceea6c2b274d2a28958c3f6e6eee871d34b591c9b06fb941f64736f6c63430008150033",
    "sourceMap": "139:592:21:-:0;;;234:60;;;252:42;-1:-1:-1;;;;;;234:60:21;;;;;;;;300:61;;;;;;;;;;;368:60;;;;;;;;;;1896:113:15;;;;;;;;;;;;;-1:-1:-1;;;1896:113:15;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:15;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:15;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;139:592:21;;14:127:22;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:22;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:22;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:22;;;2580:26;2531:89;-1:-1:-1;;1335:1:22;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:22;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:22;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:22;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:22:o;:::-;139:592:21;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063644e9c1811610071578063644e9c181461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063b4c7f2601461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610677565b60405180910390f35b6100df6100da3660046106e1565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461070b565b610274565b604051601281526020016100c3565b6101366101313660046106e1565b610298565b005b6100f3610146366004610747565b6001600160a01b031660009081526020819052604090205490565b6100b66102e3565b6100df6101773660046106e1565b6102f2565b61013661018a366004610747565b610300565b6100f361019d366004610769565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d79061079c565b80601f01602080910402602001604051908101604052809291908181526020018280546102039061079c565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b60003361026881858561034e565b60019150505b92915050565b600033610282858285610360565b61028d8585856103e3565b506001949350505050565b6005546001600160a01b03163314806102bb57506006546001600160a01b031633145b6102c457600080fd5b6102df826102da83670de0b6b3a76400006107ec565b610442565b5050565b6060600480546101d79061079c565b6000336102688185856103e3565b6005546001600160a01b031633148061032357506006546001600160a01b031633145b61032c57600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61035b8383836001610478565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146103dd57818110156103ce57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103dd84848484036000610478565b50505050565b6001600160a01b03831661040d57604051634b637e8f60e11b8152600060048201526024016103c5565b6001600160a01b0382166104375760405163ec442f0560e01b8152600060048201526024016103c5565b61035b83838361054d565b6001600160a01b03821661046c5760405163ec442f0560e01b8152600060048201526024016103c5565b6102df6000838361054d565b6001600160a01b0384166104a25760405163e602df0560e01b8152600060048201526024016103c5565b6001600160a01b0383166104cc57604051634a1406b160e11b8152600060048201526024016103c5565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103dd57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161053f91815260200190565b60405180910390a350505050565b6001600160a01b03831661057857806002600082825461056d9190610803565b909155506105ea9050565b6001600160a01b038316600090815260208190526040902054818110156105cb5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661060657600280548290039055610625565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161066a91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156106a457858101830151858201604001528201610688565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106dc57600080fd5b919050565b600080604083850312156106f457600080fd5b6106fd836106c5565b946020939093013593505050565b60008060006060848603121561072057600080fd5b610729846106c5565b9250610737602085016106c5565b9150604084013590509250925092565b60006020828403121561075957600080fd5b610762826106c5565b9392505050565b6000806040838503121561077c57600080fd5b610785836106c5565b9150610793602084016106c5565b90509250929050565b600181811c908216806107b057607f821691505b6020821081036107d057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761026e5761026e6107d6565b8082018082111561026e5761026e6107d656fea26469706673582212200f5a8bd86a68137ceea6c2b274d2a28958c3f6e6eee871d34b591c9b06fb941f64736f6c63430008150033",
    "sourceMap": "139:592:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:22;;1162:22;1144:41;;1132:2;1117:18;4293:186:15;1004:187:22;3144:97:15;3222:12;;3144:97;;;1342:25:22;;;1330:2;1315:18;3144:97:15;1196:177:22;5039:244:15;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1853:36:22;;1841:2;1826:18;3002:82:15;1711:184:22;617:112:21;;;;;;:::i;:::-;;:::i;:::-;;3299:116:15;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:15;3364:7;3390:18;;;;;;;;;;;;3299:116;2276:93;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;534:78:21:-;;;;;;:::i;:::-;;:::i;3846:140:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:15;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:18;4420:31:15;735:10:18;4436:7:15;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:18;5182:37:15;5198:4;735:10:18;5213:5:15;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:15;;5039:244;-1:-1:-1;;;;5039:244:15:o;617:112:21:-;481:7;;-1:-1:-1;;;;;481:7:21;467:10;:21;;:46;;-1:-1:-1;504:9:21;;-1:-1:-1;;;;;504:9:21;492:10;:21;467:46;459:55;;;;;;694:29:::1;700:6:::0;708:14:::1;:7:::0;716:6:::1;708:14;:::i;:::-;694:5;:29::i;:::-;617:112:::0;;:::o;2276:93:15:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:18;3733:27:15;735:10:18;3750:2:15;3754:5;3733:9;:27::i;534:78:21:-;481:7;;-1:-1:-1;;;;;481:7:21;467:10;:21;;:46;;-1:-1:-1;504:9:21;;-1:-1:-1;;;;;504:9:21;492:10;:21;467:46;459:55;;;;;;592:9:::1;:14:::0;;-1:-1:-1;;;;;;592:14:21::1;-1:-1:-1::0;;;;;592:14:21;;;::::1;::::0;;;::::1;::::0;;534:78::o;8989:128:15:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:15;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:15;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:15;;-1:-1:-1;;;;;3266:32:22;;10936:60:15;;;3248:51:22;3315:18;;;3308:34;;;3358:18;;;3351:34;;;3221:18;;10936:60:15;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:15;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:15;;5807:1;5780:30;;;3542:51:22;3515:18;;5780:30:15;3396:203:22;5735:86:15;-1:-1:-1;;;;;5834:16:15;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:15;;5902:1;5873:32;;;3542:51:22;3515:18;;5873:32:15;3396:203:22;5830:86:15;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;-1:-1:-1;;;;;7791:21:15;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:15;;7864:1;7835:32;;;3542:51:22;3515:18;;7835:32:15;3396:203:22;7787:91:15;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:15;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:15;;10132:1;10103:32;;;3542:51:22;3515:18;;10103:32:15;3396:203:22;10057:89:15;-1:-1:-1;;;;;10159:21:15;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:15;;10231:1;10203:31;;;3542:51:22;3515:18;;10203:31:15;3396:203:22;10155:90:15;-1:-1:-1;;;;;10254:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:15;10342:5;-1:-1:-1;;;;;10333:31:15;;10358:5;10333:31;;;;1342:25:22;;1330:2;1315:18;;1196:177;10333:31:15;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:15;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:15;;-1:-1:-1;6356:540:15;;-1:-1:-1;;;;;6570:15:15;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:15;;-1:-1:-1;;;;;3266:32:22;;6649:50:15;;;3248:51:22;3315:18;;;3308:34;;;3358:18;;;3351:34;;;3221:18;;6649:50:15;3046:345:22;6599:115:15;-1:-1:-1;;;;;6834:15:15;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:15;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:15;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:15;7355:4;-1:-1:-1;;;;;7346:25:15;;7365:5;7346:25;;;;1342::22;;1330:2;1315:18;;1196:177;7346:25:15;;;;;;;;6271:1107;;;:::o;14:548:22:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:22;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:22:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:22:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:127::-;2802:10;2797:3;2793:20;2790:1;2783:31;2833:4;2830:1;2823:15;2857:4;2854:1;2847:15;2873:168;2946:9;;;2977;;2994:15;;;2988:22;;2974:37;2964:71;;3015:18;;:::i;3604:125::-;3669:9;;;3690:10;;;3687:36;;;3703:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ChangeUser(address)": "b4c7f260",
    "CreateMoney(address,uint256)": "644e9c18",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"ChangeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cible\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"CreateMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Token2.sol\":\"Token2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcc4621d7410861327c9e4cfc3070432d0d35638d942652078f38894d3f469f7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29b73f6d6529188d5c91660a14d621991030f44b1b98a0447632e32da3ce0e07\",\"dweb:/ipfs/QmPcCCPbRwUL8KpFhrRK2h9SbdZUuTW3fBwi8f44WJqJ2J\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/Token2.sol\":{\"keccak256\":\"0xf028397dbfad0f991132c9f5536f9ebdb3a1893c2811d68bf10b32de3f5092ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f968d2f005541d24422f4898bb3bbca93f610cd544409a9a63bd6d26774372ef\",\"dweb:/ipfs/QmPK8G9x5L6npm717oXZwwGR2xKgtd7mFAj9hANj6TyJcR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_add",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ChangeUser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_cible",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "CreateMoney"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Token2.sol": "Token2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xcc4621d7410861327c9e4cfc3070432d0d35638d942652078f38894d3f469f7b",
        "urls": [
          "bzz-raw://29b73f6d6529188d5c91660a14d621991030f44b1b98a0447632e32da3ce0e07",
          "dweb:/ipfs/QmPcCCPbRwUL8KpFhrRK2h9SbdZUuTW3fBwi8f44WJqJ2J"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/Token2.sol": {
        "keccak256": "0xf028397dbfad0f991132c9f5536f9ebdb3a1893c2811d68bf10b32de3f5092ab",
        "urls": [
          "bzz-raw://f968d2f005541d24422f4898bb3bbca93f610cd544409a9a63bd6d26774372ef",
          "dweb:/ipfs/QmPK8G9x5L6npm717oXZwwGR2xKgtd7mFAj9hANj6TyJcR"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Token2.sol",
    "id": 40253,
    "exportedSymbols": {
      "Context": [
        40079
      ],
      "ERC20": [
        39953
      ],
      "IERC20": [
        40031
      ],
      "IERC20Errors": [
        39343
      ],
      "IERC20Metadata": [
        40057
      ],
      "Token2": [
        40252
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:693:21",
    "nodes": [
      {
        "id": 40187,
        "nodeType": "PragmaDirective",
        "src": "39:24:21",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 40188,
        "nodeType": "ImportDirective",
        "src": "66:71:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40253,
        "sourceUnit": 39954,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40252,
        "nodeType": "ContractDefinition",
        "src": "139:592:21",
        "nodes": [
          {
            "id": 40193,
            "nodeType": "VariableDeclaration",
            "src": "234:60:21",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "GodUser",
            "nameLocation": "242:7:21",
            "scope": 40252,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40191,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832626443323046393337373232313033326263424642636639456135624238423441323132313635",
              "id": 40192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "252:42:21",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2bdC20F9377221032bcBFBcf9Ea5bB8B4A212165"
            },
            "visibility": "internal"
          },
          {
            "id": 40196,
            "nodeType": "VariableDeclaration",
            "src": "300:61:21",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OtherUser",
            "nameLocation": "308:9:21",
            "scope": 40252,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40194,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "300:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832626443323046393337373232313033326263424642636639456135624238423441323132313635",
              "id": 40195,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "319:42:21",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2bdC20F9377221032bcBFBcf9Ea5bB8B4A212165"
            },
            "visibility": "internal"
          },
          {
            "id": 40204,
            "nodeType": "FunctionDefinition",
            "src": "368:60:21",
            "nodes": [],
            "body": {
              "id": 40203,
              "nodeType": "Block",
              "src": "412:16:21",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "537461626c65436f616e",
                    "id": 40199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "388:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_104bab3d5f336fa8ded3dfdff9c7e08346c535bd470f6976e561cebc81d828f1",
                      "typeString": "literal_string \"StableCoan\""
                    },
                    "value": "StableCoan"
                  },
                  {
                    "hexValue": "535443",
                    "id": 40200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "401:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3f42082bbc5d551c10665ffb41d260539d3901690b4a2ef6b8d6d113f8a07414",
                      "typeString": "literal_string \"STC\""
                    },
                    "value": "STC"
                  }
                ],
                "id": 40201,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40198,
                  "name": "ERC20",
                  "nameLocations": [
                    "382:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39953,
                  "src": "382:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "382:25:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 40197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:2:21"
            },
            "returnParameters": {
              "id": 40202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:21"
            },
            "scope": 40252,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40220,
            "nodeType": "ModifierDefinition",
            "src": "434:95:21",
            "nodes": [],
            "body": {
              "id": 40219,
              "nodeType": "Block",
              "src": "451:78:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 40210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 40207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "467:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "471:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "467:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 40209,
                            "name": "GodUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40193,
                            "src": "481:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "467:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 40214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 40211,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "492:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "496:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "492:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 40213,
                            "name": "OtherUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40196,
                            "src": "504:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "492:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "467:46:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 40206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "459:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 40216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "459:55:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40217,
                  "nodeType": "ExpressionStatement",
                  "src": "459:55:21"
                },
                {
                  "id": 40218,
                  "nodeType": "PlaceholderStatement",
                  "src": "522:1:21"
                }
              ]
            },
            "name": "onlyGod",
            "nameLocation": "443:7:21",
            "parameters": {
              "id": 40205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:21"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40232,
            "nodeType": "FunctionDefinition",
            "src": "534:78:21",
            "nodes": [],
            "body": {
              "id": 40231,
              "nodeType": "Block",
              "src": "586:26:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40227,
                      "name": "OtherUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40196,
                      "src": "592:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40228,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40222,
                      "src": "602:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "592:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40230,
                  "nodeType": "ExpressionStatement",
                  "src": "592:14:21"
                }
              ]
            },
            "functionSelector": "b4c7f260",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40224,
                  "name": "onlyGod",
                  "nameLocations": [
                    "575:7:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40220,
                  "src": "575:7:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "575:7:21"
              }
            ],
            "name": "ChangeUser",
            "nameLocation": "543:10:21",
            "parameters": {
              "id": 40223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40222,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "562:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40232,
                  "src": "554:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "553:14:21"
            },
            "returnParameters": {
              "id": 40226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:21"
            },
            "scope": 40252,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40251,
            "nodeType": "FunctionDefinition",
            "src": "617:112:21",
            "nodes": [],
            "body": {
              "id": 40250,
              "nodeType": "Block",
              "src": "688:41:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40242,
                        "name": "_cible",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40234,
                        "src": "700:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40243,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40236,
                          "src": "708:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 40246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 40244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "716:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 40245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "720:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "716:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "708:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40241,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39793,
                      "src": "694:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 40248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:29:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40249,
                  "nodeType": "ExpressionStatement",
                  "src": "694:29:21"
                }
              ]
            },
            "functionSelector": "644e9c18",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40238,
                  "name": "onlyGod",
                  "nameLocations": [
                    "677:7:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40220,
                  "src": "677:7:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "677:7:21"
              }
            ],
            "name": "CreateMoney",
            "nameLocation": "626:11:21",
            "parameters": {
              "id": 40237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40234,
                  "mutability": "mutable",
                  "name": "_cible",
                  "nameLocation": "646:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40251,
                  "src": "638:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40236,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "661:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40251,
                  "src": "653:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:32:21"
            },
            "returnParameters": {
              "id": 40240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:21"
            },
            "scope": 40252,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40189,
              "name": "ERC20",
              "nameLocations": [
                "158:5:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39953,
              "src": "158:5:21"
            },
            "id": 40190,
            "nodeType": "InheritanceSpecifier",
            "src": "158:5:21"
          }
        ],
        "canonicalName": "Token2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          40252,
          39953,
          39343,
          40057,
          40031,
          40079
        ],
        "name": "Token2",
        "nameLocation": "148:6:21",
        "scope": 40253,
        "usedErrors": [
          39313,
          39318,
          39323,
          39332,
          39337,
          39342
        ],
        "usedEvents": [
          39965,
          39974
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 21
}